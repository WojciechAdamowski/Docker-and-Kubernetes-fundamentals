apiVersion: v1 # The version of the Kubernetes API being used
kind: Pod # The type of Kubernetes object being created, in this case, a Pod
metadata:
  name: web-app-for-volumes # The name of the Pod
  labels:
    name: web-app-for-volumes # Labels to categorize and organize the Pod
spec:
  securityContext:
    runAsUser: 5678 # The user ID to run all containers in the Pod as
    runAsGroup: 5678 # The group ID to run all containers in the Pod as
    fsGroup: 5678 # The group ID to use for filesystem ownership
    fsGroupChangePolicy: "OnRootMismatch" # Policy to change ownership and permissions of the volume when it is mounted
  initContainers: # Containers that run before the main containers, typically used for initialization tasks
  - name: init-my-volume # The name of the init container
    image: busybox # The Docker image to be used for this init container
    command: ["sh", "-c", "chown -R 5678:0 /app/data"] # Command to run in the init container
    volumeMounts:
      - mountPath: "/app/data/" # The path within the container where the volume is mounted
        name: file-data # The name of the volume to mount
    securityContext:
      runAsUser: 0 # The user ID to run the init container as (root user)
  containers: # Main containers that run as part of the Pod
  - name: docker-run-app # The name of the main container
    image: docker-run-app:v1 # The Docker image to be used for this container
    ports:
    - containerPort: 5000 # The port that the container exposes
    resources:
      limits:
        cpu: "200m" # The maximum amount of CPU the container can use (200 millicores)
        memory: "128Mi" # The maximum amount of memory the container can use (128 MiB)
    volumeMounts:
      - mountPath: "/app/data/" # The path within the container where the volume is mounted
        name: file-data # The name of the volume to mount
  volumes: # Volumes that are used by the Pod
    - name: file-data # The name of the volume
      persistentVolumeClaim:
        claimName: web-app-volume-claim # The name of the PersistentVolumeClaim to use
